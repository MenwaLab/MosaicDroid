=== Pixel-Wall-E Language Reference ===

ENTRY MODE:
 - You may type your program directly into the left-hand editor, or click **Load** to open a “.gw” file.
 - Click **Save** to export the current editor contents back to a “.gw” file.

BUTTONS:
 - **Size [n] + Resize**: set the canvas to n×n pixels (max 300).
 - **Run**: lex, parse, check semantics, interpret, and repaint the grid.
 - **Load / Save**: load from or save to a “.gw” script file.

COMMANDS (each must end with a newline):
  • **Spawn(int x, int y)**  
      Initialize Wall-E’s starting coordinates.  
      *Must be the first (and only) Spawn in a program.*  

  • **Color("Name")**  
      Change the brush color. Allowed names: “Red”, “Blue”, “Green”, “Yellow”,  
      “Orange”, “Purple”, “Black”, “White” (eraser), “Transparent” (no paint).  

  • **Size(int k)**  
      Change brush thickness. If k is even, the next lower odd number is used.  

  • **DrawLine(dx, dy, distance)**  
      From the current pixel, draw a straight line `distance` pixels in direction  
      (`dx`,`dy`), where each of dx,dy ∈ {–1,0,1}.  

  • **DrawCircle(dx, dy, radius)**  
      From current pixel, move `radius` in (dx,dy) then draw the circumference only.  

  • **DrawRectangle(dx, dy, dist, width, height)**  
      From current position, move (`dx`,`dy`)*`dist` to center of a `width`×`height` rectangle and draw its border.  

  • **Fill()**  
      Flood-fill the contiguous region under the current pixel with the current brush color.  

VARIABLES & EXPRESSIONS:
  • **Assignment:**  
      `myVar <- Expression`  
  • **Arithmetic:** `+`, `-`, `*`, `/`, `**`, `%`  
  • **Boolean:** comparisons `==,>,<,>=,<=`, `&&`, `||`  

BUILT-IN FUNCTIONS:
  • **GetActualX() / GetActualY()**  
      Return Wall-E’s current X or Y.  
  • **GetCanvasSize()**  
      Returns the current canvas width (==height).  
  • **GetColorCount(color, x1, y1, x2, y2)**  
      Count pixels of `color` in the rectangle between (x1,y1) and (x2,y2).  
  • **IsBrushColor(color)**  
      1 if the current brush matches `color`, else 0.  
  • **IsBrushSize(size)**  
      1 if the current brush thickness == `size`, else 0.  
  • **IsCanvasColor(color, vertical, horizontal)**  
      1 if the pixel at offset (vertical,horizontal) from the current position equals `color`, else 0.  

CONDITIONAL JUMPS & LABELS:
  • **Labels:**  
      `myLabel` on its own line marks a jump‐target.  
  • **GoTo [myLabel] (condition)**  
      If `condition` is true (nonzero), resume execution at `myLabel`.  

EXAMPLE PROGRAM:
