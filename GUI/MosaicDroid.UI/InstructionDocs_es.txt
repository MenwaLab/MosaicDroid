=== 🤖 Guía del Lenguaje Pixel-Wall-E 🤖 ===

 🎨 MODO DE ENTRADA 🎨 :
 - Puedes escribir tu programa directamente en el editor de la izquierda, o hacer clic en "Cargar" para abrir un archivo ".pw".
 - Haz clic en "Guardar" para exportar el contenido actual del editor a un archivo ".pw".

🔱 BOTONES 🔱:
 - Tamaño [n] + Redimensionar [n]: establece el lienzo a n×n píxeles.
 - Ejecutar: si el código es correcto, pintará tu dibujo en el lienzo.
 - Cargar / Guardar: carga desde o guarda en un archivo de script ".pw".

COMANDOS (cada uno debe terminar con un salto de línea ):
  • Spawn(int x, int y)
      Inicializa las coordenadas de inicio de Wall-E.
      Si están fuera de los límites del lienzo, devuelve un error en tiempo de ejecución.
      Debe ser el primer (y único) Spawn en un programa.

  • Color("Nombre") o Color("#RRGGBB")
      Cambia el color del pincel de todos los colores conocidos por WPF. Por favor, consulta este enlace para encontrar la lista completa: 

   "https://tse1.mm.bing.net/th/id/OIP.qWrNDbmK4HJUFYPZaacmTAHaFx?rs=1&pid=ImgDetMain&cb=idpwebp1&o=7&rm=3"
		
	Ten en cuenta que "Blanco" actúa como borrador y "Transparente" no pinta nada.

  • Size(int k)
      Cambia el grosor del pincel. Si k es par, se utiliza el siguiente número impar inmediatamente menor.

  • DrawLine(dx, dy, distance)
      Desde el píxel actual, dibuja una línea recta de `distance` píxeles en la dirección (`dx`,`dy`), donde cada dx,dy ∈ {–1,0,1} y distance > 0.

  • DrawCircle(dx, dy, radius)
      Desde el píxel actual, se mueve `radius` en (dx,dy) y luego dibuja solo la circunferencia.

  • DrawRectangle(dx, dy, dist, width, height)
      Desde la posición actual, se mueve al centro de un rectángulo de `width`×`height` y dibuja su borde.

  • Fill()
      Rellena con el color de pincel actual todos los píxeles del color de la posición actual que son alcanzables sin tener que caminar sobre algún otro color.
       

  • Move(int x,int y)
      Mueve a Pixel Wall-E a la posición (x,y) solo si está dentro de los límites del lienzo, si no, reporta un error en tiempo de ejecución.

VARIABLES Y EXPRESIONES (deben ir seguidas de un salto de línea ):
  • Asignación:
      `myVar <- Expresión` 
  • Aritméticas: `+`, `-`, `*`, `/`, `**`, `%` 
  • Booleanas: comparaciones `==,>,<,>=,<=`, `&&`, `||` 

🎵 FUNCIONES INCORPORADAS 🎵:
  • GetActualX() / GetActualY()
      Devuelve la X o Y actual de Wall-E.
  • GetCanvasSize()
      Devuelve el tamaño actual del lienzo n.
  • GetColorCount(color, x1, y1, x2, y2)
      Cuenta los píxeles de `color` en el rectángulo entre (x1,y1) y (x2,y2).
  • IsBrushColor(color)
      Devuelve 1 si el pincel actual coincide con `color`, de lo contrario 0.
  • IsBrushSize(size)
      Devuelve 1 si el grosor del pincel actual == `size`, de lo contrario 0.
  • IsCanvasColor(color, vertical, horizontal)
      Devuelve 1 si el píxel en (X + horizontal, Y + vertical desde la posición actual es igual a `color`, de lo contrario 0.

SALTOS CONDICIONALES Y ETIQUETAS:
  • Etiquetas:
      `miEtiqueta` en su propia línea marca un objetivo de salto.
  • GoTo [miEtiqueta] (condición)
      Si `condición` es verdadera, reanuda la ejecución en `miEtiqueta`.